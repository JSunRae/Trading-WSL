{
  "modules": [
    {
      "module": "data/record_depth.py",
      "lines_covered": 0,
      "lines_valid": 0,
      "branches_covered": 0,
      "branches_valid": 0,
      "line_coverage_percent": 0.0,
      "branch_coverage_percent": 0.0,
      "missed_lines": []
    },
    {
      "module": "core/performance.py",
      "lines_covered": 53,
      "lines_valid": 255,
      "branches_covered": 0,
      "branches_valid": 58,
      "line_coverage_percent": 20.78,
      "branch_coverage_percent": 0.0,
      "missed_lines": [
        49,
        50,
        51,
        58,
        59,
        60,
        61,
        71,
        72,
        79,
        82,
        83,
        87,
        89,
        90,
        92,
        93,
        94,
        96,
        114,
        115,
        118,
        119,
        121,
        122,
        125,
        126,
        127,
        133,
        147,
        148,
        154,
        157,
        158,
        159,
        169,
        170,
        181,
        188,
        189,
        190,
        191,
        195,
        196,
        197,
        199,
        201,
        202,
        203,
        206,
        207,
        211,
        212,
        213,
        216,
        219,
        220,
        222,
        228,
        229,
        230,
        234,
        235,
        237,
        238,
        242,
        243,
        247,
        248,
        249,
        253,
        254,
        255,
        257,
        274,
        275,
        276,
        282,
        283,
        284,
        290,
        291,
        292,
        293,
        294,
        295,
        296,
        298,
        299,
        300,
        301,
        302,
        303,
        304,
        305,
        307,
        308,
        315,
        321,
        322,
        324,
        325,
        327,
        328,
        330,
        333,
        334,
        335,
        338,
        339,
        340,
        342,
        344,
        349,
        350,
        352,
        353,
        355,
        356,
        357,
        358,
        360,
        362,
        370,
        375,
        376,
        377,
        379,
        380,
        382,
        383,
        384,
        386,
        387,
        388,
        389,
        393,
        394,
        398,
        400,
        401,
        405,
        407,
        408,
        414,
        415,
        417,
        419,
        422,
        423,
        426,
        428,
        429,
        431,
        434,
        437,
        438,
        439,
        440,
        441,
        442,
        443,
        446,
        447,
        448,
        449,
        450,
        451,
        452,
        455,
        456,
        457,
        458,
        459,
        460,
        461,
        464,
        467,
        468,
        469,
        470,
        471,
        472,
        475,
        478,
        479,
        480,
        482,
        483,
        484,
        487,
        488,
        490,
        491,
        492,
        493,
        498,
        499,
        501,
        503,
        504,
        505
      ]
    },
    {
      "module": "risk/ml_risk_manager.py",
      "lines_covered": 85,
      "lines_valid": 215,
      "branches_covered": 14,
      "branches_valid": 64,
      "line_coverage_percent": 39.53,
      "branch_coverage_percent": 21.88,
      "missed_lines": [
        70,
        72,
        158,
        177,
        206,
        207,
        208,
        230,
        231,
        232,
        235,
        236,
        239,
        240,
        242,
        244,
        247,
        250,
        254,
        257,
        262,
        265,
        266,
        269,
        272,
        273,
        276,
        277,
        278,
        281,
        284,
        285,
        290,
        293,
        297,
        305,
        309,
        311,
        312,
        314,
        340,
        341,
        342,
        345,
        347,
        350,
        353,
        354,
        357,
        358,
        359,
        360,
        363,
        366,
        371,
        380,
        381,
        382,
        383,
        384,
        385,
        387,
        390,
        391,
        392,
        393,
        394,
        395,
        397,
        400,
        401,
        402,
        403,
        404,
        405,
        406,
        407,
        408,
        411,
        418,
        422,
        424,
        425,
        427,
        438,
        439,
        441,
        442,
        443,
        446,
        450,
        455,
        456,
        459,
        461,
        463,
        464,
        465,
        469,
        470,
        472,
        473,
        479,
        480,
        482,
        485,
        486,
        493,
        494,
        500,
        501,
        502,
        503,
        507,
        508,
        509,
        515,
        539,
        540,
        541,
        545,
        546,
        555,
        556,
        557,
        560,
        561,
        568,
        569,
        575
      ]
    },
    {
      "module": "monitoring/ml_performance_monitor.py",
      "lines_covered": 137,
      "lines_valid": 344,
      "branches_covered": 0,
      "branches_valid": 82,
      "line_coverage_percent": 39.83,
      "branch_coverage_percent": 0.0,
      "missed_lines": [
        89,
        154,
        229,
        230,
        232,
        233,
        234,
        235,
        239,
        240,
        241,
        242,
        246,
        247,
        248,
        249,
        250,
        251,
        252,
        253,
        258,
        259,
        261,
        271,
        272,
        273,
        279,
        280,
        285,
        286,
        289,
        297,
        299,
        300,
        307,
        308,
        310,
        311,
        312,
        317,
        325,
        332,
        340,
        341,
        350,
        351,
        360,
        364,
        365,
        370,
        371,
        372,
        373,
        374,
        375,
        378,
        379,
        381,
        382,
        391,
        393,
        394,
        406,
        417,
        418,
        429,
        439,
        442,
        443,
        444,
        445,
        446,
        449,
        460,
        461,
        464,
        465,
        466,
        471,
        472,
        481,
        484,
        502,
        504,
        505,
        509,
        512,
        513,
        517,
        518,
        519,
        520,
        521,
        522,
        524,
        528,
        530,
        531,
        532,
        533,
        539,
        543,
        545,
        546,
        548,
        552,
        553,
        556,
        557,
        563,
        564,
        572,
        574,
        575,
        579,
        580,
        581,
        582,
        584,
        588,
        589,
        590,
        595,
        596,
        597,
        599,
        600,
        607,
        608,
        618,
        619,
        620,
        623,
        624,
        625,
        626,
        631,
        633,
        635,
        664,
        665,
        674,
        679,
        681,
        682,
        684,
        685,
        686,
        689,
        695,
        700,
        705,
        712,
        713,
        716,
        721,
        724,
        727,
        729,
        762,
        763,
        764,
        769,
        770,
        772,
        778,
        780,
        781,
        783,
        787,
        788,
        789,
        790,
        791,
        792,
        793,
        794,
        798,
        799,
        800,
        801,
        802,
        803,
        804,
        808,
        812,
        814,
        815,
        816,
        817,
        829,
        830,
        831,
        832,
        834,
        835,
        843,
        844,
        845,
        846,
        847,
        849,
        856,
        857,
        863,
        864,
        865
      ]
    },
    {
      "module": "core/dataframe_safety.py",
      "lines_covered": 87,
      "lines_valid": 183,
      "branches_covered": 25,
      "branches_valid": 64,
      "line_coverage_percent": 47.54,
      "branch_coverage_percent": 39.06,
      "missed_lines": [
        21,
        22,
        23,
        52,
        58,
        64,
        68,
        69,
        72,
        90,
        96,
        102,
        103,
        106,
        128,
        134,
        136,
        137,
        140,
        159,
        162,
        168,
        169,
        170,
        184,
        185,
        186,
        188,
        189,
        190,
        192,
        193,
        194,
        197,
        204,
        206,
        207,
        208,
        210,
        212,
        213,
        214,
        215,
        216,
        217,
        232,
        233,
        234,
        235,
        237,
        238,
        241,
        244,
        252,
        253,
        255,
        256,
        257,
        258,
        259,
        260,
        276,
        277,
        293,
        294,
        312,
        321,
        322,
        323,
        353,
        354,
        355,
        358,
        366,
        367,
        386,
        387,
        388,
        407,
        411,
        416,
        421,
        422,
        423,
        430,
        434,
        435,
        444,
        459,
        460,
        462,
        463,
        464,
        465,
        466,
        468
      ]
    },
    {
      "module": "data/data_manager.py",
      "lines_covered": 143,
      "lines_valid": 284,
      "branches_covered": 10,
      "branches_valid": 56,
      "line_coverage_percent": 50.35,
      "branch_coverage_percent": 17.86,
      "missed_lines": [
        35,
        40,
        45,
        50,
        63,
        64,
        65,
        67,
        68,
        69,
        70,
        75,
        76,
        77,
        78,
        81,
        82,
        83,
        87,
        88,
        92,
        93,
        94,
        95,
        96,
        97,
        98,
        99,
        100,
        123,
        124,
        136,
        137,
        138,
        142,
        143,
        144,
        147,
        148,
        149,
        153,
        154,
        155,
        158,
        159,
        160,
        161,
        162,
        163,
        164,
        173,
        207,
        208,
        209,
        210,
        225,
        243,
        257,
        258,
        260,
        263,
        266,
        269,
        270,
        271,
        273,
        276,
        277,
        278,
        280,
        283,
        284,
        286,
        287,
        288,
        294,
        305,
        306,
        307,
        309,
        310,
        311,
        312,
        313,
        315,
        317,
        318,
        320,
        321,
        322,
        328,
        344,
        347,
        348,
        354,
        363,
        364,
        365,
        368,
        369,
        370,
        371,
        373,
        376,
        377,
        379,
        380,
        381,
        389,
        393,
        394,
        398,
        399,
        400,
        404,
        405,
        406,
        407,
        410,
        411,
        412,
        416,
        417,
        418,
        419,
        422,
        423,
        424,
        430,
        431,
        432,
        433,
        436,
        437,
        438,
        478,
        485,
        486,
        487,
        489,
        527
      ]
    },
    {
      "module": "execution/ml_signal_executor.py",
      "lines_covered": 201,
      "lines_valid": 354,
      "branches_covered": 30,
      "branches_valid": 88,
      "line_coverage_percent": 56.78,
      "branch_coverage_percent": 34.09,
      "missed_lines": [
        111,
        114,
        117,
        151,
        160,
        217,
        218,
        239,
        243,
        247,
        274,
        275,
        277,
        278,
        279,
        280,
        283,
        285,
        296,
        340,
        345,
        346,
        347,
        348,
        349,
        359,
        360,
        364,
        365,
        368,
        371,
        385,
        386,
        387,
        388,
        395,
        411,
        412,
        413,
        414,
        417,
        429,
        430,
        432,
        433,
        436,
        437,
        438,
        441,
        442,
        444,
        445,
        446,
        452,
        453,
        459,
        460,
        463,
        464,
        472,
        484,
        487,
        488,
        491,
        495,
        496,
        497,
        499,
        502,
        504,
        505,
        506,
        508,
        509,
        510,
        511,
        512,
        520,
        534,
        535,
        536,
        538,
        543,
        545,
        546,
        547,
        548,
        555,
        559,
        560,
        563,
        568,
        569,
        570,
        571,
        574,
        575,
        578,
        580,
        586,
        587,
        592,
        593,
        594,
        595,
        607,
        609,
        610,
        613,
        616,
        617,
        620,
        621,
        625,
        627,
        638,
        652,
        659,
        669,
        682,
        683,
        685,
        689,
        690,
        691,
        692,
        695,
        700,
        701,
        705,
        707,
        711,
        717,
        721,
        722,
        723,
        724,
        725,
        729,
        730,
        731,
        732,
        733,
        738,
        739,
        761,
        762,
        763,
        766,
        767,
        771,
        772,
        782
      ]
    },
    {
      "module": "domain/interfaces.py",
      "lines_covered": 17,
      "lines_valid": 27,
      "branches_covered": 0,
      "branches_valid": 0,
      "line_coverage_percent": 62.96,
      "branch_coverage_percent": 0.0,
      "missed_lines": [
        31,
        56,
        67,
        89,
        101,
        111,
        123,
        131,
        139,
        140
      ]
    },
    {
      "module": "core/__init__.py",
      "lines_covered": 7,
      "lines_valid": 11,
      "branches_covered": 0,
      "branches_valid": 2,
      "line_coverage_percent": 63.64,
      "branch_coverage_percent": 0.0,
      "missed_lines": [
        89,
        90,
        92,
        99
      ]
    },
    {
      "module": "core/error_handler.py",
      "lines_covered": 108,
      "lines_valid": 166,
      "branches_covered": 14,
      "branches_valid": 32,
      "line_coverage_percent": 65.06,
      "branch_coverage_percent": 43.75,
      "missed_lines": [
        55,
        64,
        73,
        82,
        154,
        160,
        161,
        184,
        188,
        192,
        193,
        195,
        196,
        199,
        203,
        221,
        222,
        256,
        257,
        258,
        267,
        268,
        269,
        270,
        271,
        277,
        284,
        285,
        286,
        287,
        288,
        289,
        290,
        291,
        292,
        293,
        294,
        295,
        297,
        298,
        300,
        301,
        311,
        312,
        313,
        317,
        319,
        320,
        321,
        322,
        323,
        325,
        326,
        334,
        337,
        344,
        345,
        347
      ]
    },
    {
      "module": "infra/__init__.py",
      "lines_covered": 15,
      "lines_valid": 23,
      "branches_covered": 0,
      "branches_valid": 0,
      "line_coverage_percent": 65.22,
      "branch_coverage_percent": 0.0,
      "missed_lines": [
        47,
        49,
        53,
        55,
        59,
        61,
        65,
        67
      ]
    },
    {
      "module": "data/pandas_helpers.py",
      "lines_covered": 37,
      "lines_valid": 56,
      "branches_covered": 1,
      "branches_valid": 6,
      "line_coverage_percent": 66.07,
      "branch_coverage_percent": 16.67,
      "missed_lines": [
        36,
        38,
        40,
        41,
        43,
        44,
        48,
        53,
        57,
        64,
        68,
        69,
        73,
        77,
        78,
        82,
        83,
        87,
        88
      ]
    },
    {
      "module": "core/retry_manager.py",
      "lines_covered": 159,
      "lines_valid": 238,
      "branches_covered": 36,
      "branches_valid": 66,
      "line_coverage_percent": 66.81,
      "branch_coverage_percent": 54.55,
      "missed_lines": [
        119,
        120,
        121,
        125,
        126,
        127,
        131,
        184,
        214,
        245,
        252,
        255,
        256,
        258,
        270,
        276,
        277,
        297,
        298,
        299,
        300,
        301,
        302,
        304,
        307,
        332,
        379,
        380,
        381,
        382,
        385,
        387,
        388,
        389,
        390,
        392,
        394,
        396,
        398,
        447,
        448,
        450,
        457,
        458,
        460,
        467,
        468,
        470,
        476,
        477,
        480,
        482,
        485,
        486,
        487,
        488,
        489,
        490,
        493,
        494,
        495,
        496,
        497,
        498,
        501,
        502,
        503,
        504,
        505,
        506,
        509,
        510,
        511,
        512,
        513,
        514,
        516,
        517,
        519
      ]
    },
    {
      "module": "core/integrated_error_handling.py",
      "lines_covered": 177,
      "lines_valid": 251,
      "branches_covered": 18,
      "branches_valid": 42,
      "line_coverage_percent": 70.52,
      "branch_coverage_percent": 42.86,
      "missed_lines": [
        89,
        91,
        95,
        266,
        283,
        372,
        373,
        393,
        416,
        417,
        418,
        419,
        437,
        439,
        440,
        441,
        442,
        443,
        449,
        450,
        453,
        454,
        456,
        457,
        459,
        460,
        461,
        462,
        463,
        464,
        466,
        477,
        482,
        484,
        505,
        506,
        513,
        524,
        528,
        531,
        534,
        536,
        575,
        576,
        578,
        587,
        589,
        590,
        592,
        599,
        600,
        602,
        608,
        609,
        612,
        615,
        618,
        619,
        620,
        621,
        622,
        625,
        626,
        627,
        628,
        629,
        632,
        633,
        634,
        635,
        636,
        639,
        642,
        644
      ]
    },
    {
      "module": "core/connection_pool.py",
      "lines_covered": 216,
      "lines_valid": 289,
      "branches_covered": 42,
      "branches_valid": 72,
      "line_coverage_percent": 74.74,
      "branch_coverage_percent": 58.33,
      "missed_lines": [
        90,
        111,
        118,
        119,
        121,
        122,
        127,
        128,
        129,
        184,
        219,
        228,
        234,
        235,
        237,
        238,
        239,
        240,
        241,
        244,
        245,
        269,
        270,
        272,
        352,
        353,
        358,
        370,
        371,
        384,
        385,
        389,
        390,
        423,
        425,
        426,
        429,
        430,
        432,
        433,
        434,
        437,
        438,
        440,
        469,
        491,
        493,
        495,
        496,
        510,
        519,
        525,
        526,
        529,
        532,
        533,
        534,
        535,
        536,
        539,
        541,
        543,
        544,
        546,
        547,
        550,
        551,
        552,
        555,
        559,
        560,
        564,
        566
      ]
    },
    {
      "module": "infra/async_utils.py",
      "lines_covered": 67,
      "lines_valid": 84,
      "branches_covered": 6,
      "branches_valid": 12,
      "line_coverage_percent": 79.76,
      "branch_coverage_percent": 50.0,
      "missed_lines": [
        115,
        116,
        117,
        166,
        167,
        172,
        173,
        218,
        219,
        222,
        223,
        224,
        227,
        228,
        229,
        230,
        231
      ]
    },
    {
      "module": "core/config.py",
      "lines_covered": 119,
      "lines_valid": 142,
      "branches_covered": 21,
      "branches_valid": 28,
      "line_coverage_percent": 83.8,
      "branch_coverage_percent": 75.0,
      "missed_lines": [
        128,
        137,
        138,
        141,
        145,
        174,
        175,
        233,
        236,
        240,
        241,
        245,
        249,
        250,
        252,
        270,
        271,
        277,
        278,
        283,
        284,
        289,
        290
      ]
    },
    {
      "module": "api.py",
      "lines_covered": 100,
      "lines_valid": 115,
      "branches_covered": 2,
      "branches_valid": 2,
      "line_coverage_percent": 86.96,
      "branch_coverage_percent": 100.0,
      "missed_lines": [
        104,
        114,
        119,
        124,
        129,
        139,
        144,
        149,
        154,
        159,
        164,
        169,
        174,
        179,
        184
      ]
    },
    {
      "module": "infra/_ib_availability.py",
      "lines_covered": 14,
      "lines_valid": 15,
      "branches_covered": 1,
      "branches_valid": 2,
      "line_coverage_percent": 93.33,
      "branch_coverage_percent": 50.0,
      "missed_lines": [
        33
      ]
    },
    {
      "module": "__init__.py",
      "lines_covered": 2,
      "lines_valid": 2,
      "branches_covered": 0,
      "branches_valid": 0,
      "line_coverage_percent": 100.0,
      "branch_coverage_percent": 0.0,
      "missed_lines": []
    },
    {
      "module": "data/__init__.py",
      "lines_covered": 8,
      "lines_valid": 8,
      "branches_covered": 0,
      "branches_valid": 0,
      "line_coverage_percent": 100.0,
      "branch_coverage_percent": 0.0,
      "missed_lines": []
    },
    {
      "module": "domain/__init__.py",
      "lines_covered": 2,
      "lines_valid": 2,
      "branches_covered": 0,
      "branches_valid": 0,
      "line_coverage_percent": 100.0,
      "branch_coverage_percent": 0.0,
      "missed_lines": []
    },
    {
      "module": "domain/ml_types.py",
      "lines_covered": 129,
      "lines_valid": 129,
      "branches_covered": 0,
      "branches_valid": 0,
      "line_coverage_percent": 100.0,
      "branch_coverage_percent": 0.0,
      "missed_lines": []
    },
    {
      "module": "domain/ports.py",
      "lines_covered": 10,
      "lines_valid": 10,
      "branches_covered": 2,
      "branches_valid": 4,
      "line_coverage_percent": 100.0,
      "branch_coverage_percent": 50.0,
      "missed_lines": []
    },
    {
      "module": "execution/__init__.py",
      "lines_covered": 2,
      "lines_valid": 2,
      "branches_covered": 0,
      "branches_valid": 0,
      "line_coverage_percent": 100.0,
      "branch_coverage_percent": 0.0,
      "missed_lines": []
    },
    {
      "module": "infra/service_registry.py",
      "lines_covered": 11,
      "lines_valid": 11,
      "branches_covered": 2,
      "branches_valid": 2,
      "line_coverage_percent": 100.0,
      "branch_coverage_percent": 100.0,
      "missed_lines": []
    },
    {
      "module": "lib/__init__.py",
      "lines_covered": 3,
      "lines_valid": 3,
      "branches_covered": 0,
      "branches_valid": 0,
      "line_coverage_percent": 100.0,
      "branch_coverage_percent": 0.0,
      "missed_lines": []
    },
    {
      "module": "monitoring/__init__.py",
      "lines_covered": 2,
      "lines_valid": 2,
      "branches_covered": 0,
      "branches_valid": 0,
      "line_coverage_percent": 100.0,
      "branch_coverage_percent": 0.0,
      "missed_lines": []
    },
    {
      "module": "risk/__init__.py",
      "lines_covered": 2,
      "lines_valid": 2,
      "branches_covered": 0,
      "branches_valid": 0,
      "line_coverage_percent": 100.0,
      "branch_coverage_percent": 0.0,
      "missed_lines": []
    }
  ]
}