name: CI

on:
  push:
    branches: [main, develop]
  pull_request:
    branches: [main, develop]

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          submodules: true

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.12'
          cache: 'pip'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -e .[dev]

      - name: Validate tools --describe JSON
        run: |
          set -e
          PY=python
          echo 'Testing all tools with --describe as JSON...'
          for tool in \
            'src/tools/auto_backfill_from_warrior.py' \
            'src/tools/analyze_depth.py' \
            'src/tools/record_depth.py' \
            'src/tools/quick_start.py' \
            'src/tools/analysis/analyze_scripts.py' \
            'src/tools/analysis/system_check_analysis.py' \
            'src/tools/analysis/validate_ml_structure.py' \
            'src/tools/analysis/script_inventory_analyzer.py' \
            'src/tools/setup/setup_automated_trading.py' \
            'src/tools/setup/setup_ib_gateway.py' \
            'src/tools/setup/fix_hardcoded_paths.py' \
            'src/tools/validate_export_manifest.py'; do
            echo "Testing $tool --describe..."
            output=$($PY "$tool" --describe 2>&1) || { echo "Error: $tool --describe failed"; exit 1; }
            echo "$output" | $PY -m json.tool > /dev/null || { echo "Error: $tool --describe returned invalid JSON"; echo "$output"; exit 1; }
          done
          echo 'All tools --describe validation completed successfully!'

      - name: Validate sample TF_1 export manifest
        run: |
          set -e
          # PASS: with model-dir containing production.alias
          mkdir -p /tmp/model_dir
          echo "tf1-model-stable" > /tmp/model_dir/production.alias
          python -m src.tools.validate_export_manifest --manifest examples/tf1_export_manifest.sample.json --model-dir /tmp/model_dir
          # FAIL: same manifest but missing production.alias should exit nonzero
          rm -f /tmp/model_dir/production.alias || true
          if python -m src.tools.validate_export_manifest --manifest examples/tf1_export_manifest.sample.json --model-dir /tmp/model_dir; then
            echo "Expected failure when production.alias is missing" >&2
            exit 1
          fi
          # Also verify the explicit no-alias sample fails even without model-dir enforcement
          if python -m src.tools.validate_export_manifest --manifest examples/tf1_export_manifest.no_alias.sample.json; then
            echo "Expected failure on no-alias sample" >&2
            exit 1
          fi

      - name: Run tests
        env:
          PYTHONWARNINGS: default
        run: |
          python -m pytest -q tests/
