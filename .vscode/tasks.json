{
  "version": "2.0.0",
  "tasks": [
    {
      "label": "Install Dependencies",
      "type": "shell",
      "command": "${workspaceFolder}/.venv/bin/pip",
      "args": ["install", "-e", ".[dev]"],
      "group": "build",
      "presentation": {
        "echo": true,
        "reveal": "always",
        "focus": false,
        "panel": "shared"
      },
      "problemMatcher": []
    },
    {
      "label": "Run Tests",
      "type": "shell",
      "command": "${workspaceFolder}/.venv/bin/python",
      "args": ["-m", "pytest", "tests/"],
      "group": "test",
      "presentation": {
        "echo": true,
        "reveal": "always",
        "focus": false,
        "panel": "shared"
      },
      "problemMatcher": []
    },
    {
      "label": "Run Tests with Coverage",
      "type": "shell",
      "command": "${workspaceFolder}/.venv/bin/python",
      "args": [
        "-m",
        "pytest",
        "tests/",
        "--cov=src",
        "--cov-report=term-missing"
      ],
      "group": "test",
      "presentation": {
        "echo": true,
        "reveal": "always",
        "focus": false,
        "panel": "shared"
      },
      "problemMatcher": []
    },
    {
      "label": "Lint with Ruff",
      "type": "shell",
      "command": "${workspaceFolder}/.venv/bin/python",
      "args": ["-m", "ruff", "check", "src/", "tests/", "examples/"],
      "group": "build",
      "presentation": {
        "echo": true,
        "reveal": "always",
        "focus": false,
        "panel": "shared"
      },
      "problemMatcher": []
    },
    {
      "label": "Format with Ruff",
      "type": "shell",
      "command": "${workspaceFolder}/.venv/bin/python",
      "args": ["-m", "ruff", "format", "src/", "tests/", "examples/"],
      "group": "build",
      "presentation": {
        "echo": true,
        "reveal": "always",
        "focus": false,
        "panel": "shared"
      },
      "problemMatcher": []
    },
    {
      "label": "Type Check with mypy",
      "type": "shell",
      "command": "${workspaceFolder}/.venv/bin/python",
      "args": ["-m", "mypy", "src/"],
      "group": "build",
      "presentation": {
        "echo": true,
        "reveal": "always",
        "focus": false,
        "panel": "shared"
      },
      "problemMatcher": []
    },
    {
      "label": "Run Trading Main",
      "type": "shell",
      "command": "${workspaceFolder}/.venv/bin/python",
      "args": ["src/ib_Main.py"],
      "group": "build",
      "presentation": {
        "echo": true,
        "reveal": "always",
        "focus": false,
        "panel": "shared"
      },
      "problemMatcher": []
    },
    {
      "label": "Run Automated Trading",
      "type": "shell",
      "command": "${workspaceFolder}/.venv/bin/python",
      "args": ["src/tools/run_trading_fully_automated.py", "--symbols", "AAPL"],
      "group": "build",
      "presentation": {
        "echo": true,
        "reveal": "always",
        "focus": false,
        "panel": "shared"
      },
      "problemMatcher": []
    },
    {
      "label": "Setup Automated Trading",
      "type": "shell",
      "command": "${workspaceFolder}/.venv/bin/python",
      "args": ["src/tools/setup/setup_automated_trading.py"],
      "group": "build",
      "presentation": {
        "echo": true,
        "reveal": "always",
        "focus": false,
        "panel": "shared"
      },
      "problemMatcher": []
    },
    {
      "label": "Setup IB Gateway",
      "type": "shell",
      "command": "${workspaceFolder}/.venv/bin/python",
      "args": ["src/tools/setup/setup_ib_gateway.py"],
      "group": "build",
      "presentation": {
        "echo": true,
        "reveal": "always",
        "focus": false,
        "panel": "shared"
      },
      "problemMatcher": []
    },
    {
      "label": "inventory:scripts",
      "type": "shell",
      "command": "${workspaceFolder}/.venv/bin/python",
      "args": ["src/tools/analysis/script_inventory_analyzer.py"],
      "group": "build",
      "presentation": {
        "echo": true,
        "reveal": "always",
        "focus": false,
        "panel": "shared"
      },
      "problemMatcher": []
    },
    {
      "label": "analyze:scripts",
      "type": "shell",
      "command": "${workspaceFolder}/.venv/bin/python",
      "args": ["src/tools/analysis/analyze_scripts.py"],
      "group": "build",
      "presentation": {
        "echo": true,
        "reveal": "always",
        "focus": false,
        "panel": "shared"
      },
      "problemMatcher": []
    },
    {
      "label": "system:check",
      "type": "shell",
      "command": "${workspaceFolder}/.venv/bin/python",
      "args": ["src/tools/analysis/system_check_analysis.py"],
      "group": "build",
      "presentation": {
        "echo": true,
        "reveal": "always",
        "focus": false,
        "panel": "shared"
      },
      "problemMatcher": []
    },
    {
      "label": "validate:ml",
      "type": "shell",
      "command": "${workspaceFolder}/.venv/bin/python",
      "args": ["src/tools/analysis/validate_ml_structure.py"],
      "group": "build",
      "presentation": {
        "echo": true,
        "reveal": "always",
        "focus": false,
        "panel": "shared"
      },
      "problemMatcher": []
    },
    {
      "label": "describe:all",
      "type": "shell",
      "command": "bash",
      "args": [
        "-c",
        "set -e; PY=\"${workspaceFolder}/.venv/bin/python\"; echo 'Testing all tools with --describe...'; for tool in 'src/tools/run_trading_fully_automated.py' 'src/tools/analyze_depth.py' 'src/tools/record_depth.py' 'src/tools/quick_start.py' 'src/tools/analysis/analyze_scripts.py' 'src/tools/analysis/system_check_analysis.py' 'src/tools/analysis/validate_ml_structure.py' 'src/tools/analysis/script_inventory_analyzer.py' 'src/tools/setup/setup_automated_trading.py' 'src/tools/setup/setup_ib_gateway.py' 'src/tools/setup/fix_hardcoded_paths.py'; do echo \"Testing $tool --describe...\"; output=$($PY \"$tool\" --describe 2>&1) || { echo \"Error: $tool --describe failed\"; exit 1; }; echo \"$output\" | $PY -m json.tool > /dev/null || { echo \"Error: $tool --describe returned invalid JSON\"; exit 1; }; echo \"âœ… $tool --describe OK\"; done; echo 'All tools --describe validation completed successfully!'"
      ],
      "group": "test",
      "presentation": {
        "echo": true,
        "reveal": "always",
        "focus": false,
        "panel": "shared"
      },
      "problemMatcher": []
    },
    {
      "label": "lint:extended",
      "type": "shell",
      "command": "${workspaceFolder}/.venv/bin/python",
      "args": ["-m", "ruff", "check", "src/", "tests/", "examples/"],
      "group": "build",
      "presentation": {
        "echo": true,
        "reveal": "always",
        "focus": false,
        "panel": "shared"
      },
      "problemMatcher": []
    },
    {
      "label": "format:extended",
      "type": "shell",
      "command": "${workspaceFolder}/.venv/bin/python",
      "args": ["-m", "ruff", "format", "src/", "tests/", "examples/"],
      "group": "build",
      "presentation": {
        "echo": true,
        "reveal": "always",
        "focus": false,
        "panel": "shared"
      },
      "problemMatcher": []
    },
    {
      "label": "typecheck:extended",
      "type": "shell",
      "command": "npx",
      "args": ["pyright", "src/", "tests/", "examples/"],
      "group": "build",
      "presentation": {
        "echo": true,
        "reveal": "always",
        "focus": false,
        "panel": "shared"
      },
      "problemMatcher": []
    }
  ]
}
